import "./server-config"; // Carrega configura√ß√£o do servidor
import db from "./drizzle";
import { cursos } from "./schema";

const seedData = [
    {
        title: "B√°sico",
        imageSrc: "/introdu√ßao.png",
        resumo: "Este curso introdut√≥rio explora os fundamentos da computa√ß√£o cl√°ssica e d√° os primeiros passos na computa√ß√£o qu√¢ntica. Ideal para quem nunca programou ou n√£o possui forma√ß√£o avan√ßada em matem√°tica.",
        topicos: "Conceito de bits e l√≥gica bin√°ria\nPortas l√≥gicas cl√°ssicas (AND, OR, NOT, etc.)\nCodifica√ß√£o de informa√ß√µes com ASCII e bin√°rio\nPortas revers√≠veis e m√°quinas de Turing\nConceito de qubit e superposi√ß√£o\nMedidas qu√¢nticas e a esfera de Bloch\nPortas qu√¢nticas de 1 qubit (X, Y, Z, H, etc.)\nIntrodu√ß√£o a circuitos qu√¢nticos e ferramentas como Quirk"
    },
    {
        title: "Algebra linear",
        imageSrc: "/introdu√ßao.png",
        resumo: "Aborda a matem√°tica fundamental para entender e manipular sistemas qu√¢nticos. Foco em vetores, matrizes e opera√ß√µes que s√£o essenciais em computa√ß√£o qu√¢ntica.",
        topicos: "Vetores e espa√ßos vetoriais\nMatrizes e opera√ß√µes matriciais\nAutovalores e autovetores\nProduto interno e ortogonalidade\nTransforma√ß√µes lineares\nDecomposi√ß√£o espectral\nAplica√ß√µes em computa√ß√£o qu√¢ntica"
    },
    {
        title: "Computa√ß√£o qu√¢ntica",
        imageSrc: "/quantum-computing.png",
        resumo: "Explora sistemas com m√∫ltiplos qubits, entrela√ßamento e portas de m√∫ltiplos qubits. Essencial para compreender o potencial da computa√ß√£o qu√¢ntica.",
        topicos: "Sistemas de m√∫ltiplos qubits\nEntrela√ßamento qu√¢ntico\nPortas de m√∫ltiplos qubits\nCircuitos qu√¢nticos complexos\nAlgoritmos qu√¢nticos b√°sicos\nMedidas em sistemas m√∫ltiplos\nCorre√ß√£o de erros qu√¢nticos"
    },
    {
        title: "Teoria qu√¢ntica",
        imageSrc: "/quantum.png",
        resumo: "Explora as aplica√ß√µes fundamentais da mec√¢nica qu√¢ntica para comunica√ß√£o segura, teleporta√ß√£o e codifica√ß√£o eficiente de informa√ß√µes.",
        topicos: "Criptografia qu√¢ntica\nTeleporta√ß√£o qu√¢ntica\nCodifica√ß√£o densa\nEstados de Bell\nMedidas de entrela√ßamento\nAplica√ß√µes em comunica√ß√£o segura\nProtocolos qu√¢nticos avan√ßados"
    }
];

async function seed() {
    try {
        console.log("üå± Iniciando seed do banco de dados...");
        
        // Limpa a tabela existente
        await db.delete(cursos);
        console.log("‚úÖ Tabela limpa");
        
        // Insere os dados
        const insertedCursos = await db.insert(cursos).values(seedData).returning();
        console.log("‚úÖ Dados inseridos:", insertedCursos.length, "cursos");
        
        console.log("üéâ Seed conclu√≠do com sucesso!");
    } catch (error) {
        console.error("‚ùå Erro durante o seed:", error);
    }
}

// Executa o seed se o arquivo for executado diretamente
if (require.main === module) {
    seed();
}

export { seed }; 